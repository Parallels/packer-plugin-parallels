// Code generated by "packer-sdc mapstructure-to-hcl2"; DO NOT EDIT.

package common

import (
	"github.com/hashicorp/hcl/v2/hcldec"
	"github.com/zclconf/go-cty/cty"
)

// FlatBootScreenConfig is an auto-generated flat version of BootScreenConfig.
// Where the contents of a field with a `mapstructure:,squash` tag are bubbled up.
type FlatBootScreenConfig struct {
	BootGroupInterval *string  `mapstructure:"boot_keygroup_interval" cty:"boot_keygroup_interval" hcl:"boot_keygroup_interval"`
	BootWait          *string  `mapstructure:"boot_wait" cty:"boot_wait" hcl:"boot_wait"`
	BootCommand       []string `mapstructure:"boot_command" cty:"boot_command" hcl:"boot_command"`
	ScreenName        *string  `mapstructure:"screen_name" cty:"screen_name" hcl:"screen_name"`
	MatchingStrings   []string `mapstructure:"matching_strings" cty:"matching_strings" hcl:"matching_strings"`
	IsLastScreen      *bool    `mapstructure:"is_last_screen" cty:"is_last_screen" hcl:"is_last_screen"`
	ExecuteOnlyOnce   *bool    `mapstructure:"execute_only_once" cty:"execute_only_once" hcl:"execute_only_once"`
}

// FlatMapstructure returns a new FlatBootScreenConfig.
// FlatBootScreenConfig is an auto-generated flat version of BootScreenConfig.
// Where the contents a fields with a `mapstructure:,squash` tag are bubbled up.
func (*BootScreenConfig) FlatMapstructure() interface{ HCL2Spec() map[string]hcldec.Spec } {
	return new(FlatBootScreenConfig)
}

// HCL2Spec returns the hcl spec of a BootScreenConfig.
// This spec is used by HCL to read the fields of BootScreenConfig.
// The decoded values from this spec will then be applied to a FlatBootScreenConfig.
func (*FlatBootScreenConfig) HCL2Spec() map[string]hcldec.Spec {
	s := map[string]hcldec.Spec{
		"boot_keygroup_interval": &hcldec.AttrSpec{Name: "boot_keygroup_interval", Type: cty.String, Required: false},
		"boot_wait":              &hcldec.AttrSpec{Name: "boot_wait", Type: cty.String, Required: false},
		"boot_command":           &hcldec.AttrSpec{Name: "boot_command", Type: cty.List(cty.String), Required: false},
		"screen_name":            &hcldec.AttrSpec{Name: "screen_name", Type: cty.String, Required: false},
		"matching_strings":       &hcldec.AttrSpec{Name: "matching_strings", Type: cty.List(cty.String), Required: false},
		"is_last_screen":         &hcldec.AttrSpec{Name: "is_last_screen", Type: cty.Bool, Required: false},
		"execute_only_once":      &hcldec.AttrSpec{Name: "execute_only_once", Type: cty.Bool, Required: false},
	}
	return s
}
